pico-8 cartridge // http://www.pico-8.com
version 43
__lua__
--the snickness (snake sickness)
--by songbird

--define tile size for grid
tile_size = 8

function _init()
	init_snake()
	init_food()
end

function _update()
	update_snake()
	update_food()
end

function _draw()
	cls()
	draw_snake()
	draw_food()
end

-->8
--snake

function init_snake()
	snake = {
		x = 0,
		y = 0,
		dx = 0,
		dy = 0,
		head = 1,
		body = 9,
		tail = 31
	}

	head = make_segment(
		snake.head,
		snake.x,
		snake.y
	)

	for i = 1, 3 do
		body:enqueue(make_segment(
			snake.body,
			snake.x,
			snake.y + i * tile_size
		))
	end

	tail = make_segment(
		snake.tail,
		snake.x,
		snake.y + 4 * tile_size
	)
end

function update_snake()
end

function draw_snake()
	--draw head
	spr(
		head.sprite,
		head.x,
		head.y
	)

	--draw body segments
	for i = body.first, body.last do
		spr(
			body[i].sprite,
			body[i].x,
			body[i].y
		)
	end

	--draw tail
	spr(
		tail.sprite,
		tail.x,
		tail.y
	)
end

function make_segment(sprite, x, y)
	return {
		sprite = sprite,
		x = x,
		y = y
	}
end

-->8
--body

body = { first = 1, last = 0 }

function body:length()
	return 1 + self.last - self.first
end

function body:isempty()
	return self.first > self.last
end

function body:enqueue(segment)
	self.last += 1
	self[self.last] = segment
end

function body:dequeue()
	if self:isempty() then
		return nil
	end
	local segment = self[self.first]
	self[self.first] = nil
	self.first += 1
	return segment
end

-->8
--food

function init_food()
end

function update_food()
end

function draw_food()
end

__gfx__
00005500000880000000000000bb3b0000000000000880000000000000bb3b000000000000bb3b000000000000bb3b00000000000000000000bb3b0000bb3b00
00445440003bb30003bbb30003b3bb30003bbb30005335000533350005b3bb500053335000b3bb000000000000b3bb00000000000000000000b3bb0000b3bb00
0488444403bbbb30bbbb0b300bbbbbb003b0bbbb053bb350bbbb035003bbbb300530bbbb00bb3b00bbbbbbbb00bb3bbb003bbbbbbbbbb300bbbb3b0000bb3bbb
488888450b0bb0b03bbbbbb80bbbbbb08bbbbb3b030bb0303bbbbb3803bbbb3083bbbb3b00b3bb003b3b3b3b00b3bb3b00bb3b3b3b3bbb003b3bbb0000b3bb3b
448884540bbbbbb0b3bbbbb80b0bb0b08bbbbbb303bbbb30b3bbbb38030bb03083bbbbb300bb3b00b3b3b3b300bbb3b300bbb3b3b3bb3b00b3b3bb00003bb3b3
484845450bbbbbb0bbbb0b3003bbbb3003b0bbbb03bbbb30bbbb0350053bb3500530bbbb00b3bb00bbbbbbbb003bbbbb00b3bbbbbbb3bb00bbbbb3000053bbbb
0484545003bb3b3003bbb300003bb300003bbb3005bb3b5005333500005335000053335000bb3b00000000000000000000bb3b0000bb3b000000000000000000
0045450000b3bb0000000000000880000000000000b3bb0000000000000880000000000000b3bb00000000000000000000b3bb0000b3bb000000000000000000
000000000000000000bb3b0000bb3b000033330000bb3b00003333000033330000bb3b0000bb3b000055550000bb3b00005555000055550000bb3b0000bb3b00
000000000000000000b3bb0003b3bb3003bbbb3003b3bb3003bbbb3003bbbb3003b3bb3005b3bb50053bb35005b3bb50053bb350053bb35005b3bb5000b3bb00
0053bbbbbbbb3500bbbb3b003bbb3bb3bbbb3bbb3bbb3bbb3bbb3bbbbbbb3bb3bbbb3bb353bb3b35bbbb3bbb53bb3bbb53bb3bbbbbbb3b35bbbb3b3500bb3b00
003b3b3b3b3bb3003b3bbb003b3bbbb33b3bbb3b3b3bbb3b3b3bbb3b3b3bbbb33b3bbbb35b3bbbb53b3bbb3b5b3bbb3b5b3bbb3b3b3bbbb53b3bbbb500b3bb00
00bbb3b3b3bb3b00b3b3b3003bbbb3b3b3bbb3b33bbbb3b33bbbb3b3b3bbb3b3b3bbb3b35bbbb3b5b3bbb3b35bbbb3b35bbbb3b3b3bbb3b5b3bbb3b500bb3b00
00b3bbbbbbb3bb00bbbb35003bb3bbb3bbb3bbbb3bb3bbbb3bb3bbbbbbb3bbb3bbb3bbb353b3bb35bbb3bbbb53b3bbbb53b3bbbbbbb3bb35bbb3bb3500bbbb00
00bb3b0000bb3b000000000003bb3b3003bbbb3003bbbb3003bb3b3003bb3b3003bbbb3005bb3b50053bb350053bb35005bb3b5005bb3b50053bb350003bb300
00b3bb0000b3bb000000000000b3bb00003333000033330000b3bb0000b3bb000033330000b3bb00005555000055550000b3bb0000b3bb000055550000033000
00000000000330000000000000bb3b00000000000005500000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000003bb3000000000000b3bb00000000000053350000000000000000000000000000000000000000000000000000000000000000000000000000000000
03bbbbbb00bbbb00bbbbbb3000bb3b00053bbbbb003bb300bbbbb350000000000000000000000000000000000000000000000000000000000000000000000000
3bbb3b3b00b3bb003b3b3bb300b3bb0053bb3b3b00b3bb003b3b3b35000000000000000000000000000000000000000000000000000000000000000000000000
3bb3b3b300bb3b00b3b3bbb300bb3b0053b3b3b300bb3b00b3b3bb35000000000000000000000000000000000000000000000000000000000000000000000000
03bbbbbb00b3bb00bbbbbb30003bb300053bbbbb00b3bb00bbbbb350000000000000000000000000000000000000000000000000000000000000000000000000
0000000000bb3b0000000000005335000000000000bb3b0000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000b3bb0000000000000550000000000000b3bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000
